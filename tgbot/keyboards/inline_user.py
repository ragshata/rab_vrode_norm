# - *- coding: utf- 8 - *-
from typing import Optional, Union

from aiogram import Router, Bot, F
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import CallbackQuery, Message
from aiogram import Dispatcher, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardButton
from aiogram.filters.state import StateFilter

from tgbot.data.config import SECRET_KEY, SHOP_ID
from tgbot.database.db_payments import Paymentsx
from tgbot.database.db_users import Userx
from tgbot.payment import create_payment
from tgbot.utils.const_functions import ikb

router = Router(name=__name__)


################################################################################
#################################### –ü–†–û–ß–ï–ï ####################################
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è


def user_profile_finl(user: Optional[object] = None) -> InlineKeyboardMarkup:
    # user ‚Äî –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="profile:edit"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì∏ –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="profile:add_photos"
                ),
                InlineKeyboardButton(
                    text="üñº –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ", callback_data="profile:view_photos:0"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üóë –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="profile:clear_photos"
                )
            ],
        ]
    )


# tgbot/keyboards/inline_user_page.py
from aiogram.utils.keyboard import InlineKeyboardBuilder as IKB
from aiogram.types import InlineKeyboardMarkup
from tgbot.utils.const_functions import ikb


def client_profile_finl() -> InlineKeyboardMarkup:
    kb = IKB()

    # –ü—Ä–∏–º–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è ‚Äî –æ—Å—Ç–∞–≤—å, –∫–∞–∫–∏–µ —É —Ç–µ–±—è –µ—Å—Ç—å
    kb.row(ikb("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", data="profile:edit"))
    kb.row(ikb("üí≥ –ü–æ–¥–ø–∏—Å–∫–∞", data="client:subscription"))  # <-- –¥–æ–±–∞–≤–∏–ª–∏ –∑–¥–µ—Å—å

    # –ù–ò–ì–î–ï –ù–ï –î–û–ë–ê–í–õ–Ø–ï–ú ¬´–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å¬ª –∏ ¬´–í—ã–≤–µ—Å—Ç–∏¬ª
    return kb.as_markup()


@router.callback_query(F.data == "client_refill")
async def start_refill(call: CallbackQuery, state: FSMContext):
    await call.message.edit_text("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ä—É–±–ª—è—Ö:")
    await state.set_state("waiting_for_amount")


@router.message(StateFilter("waiting_for_amount"))
async def process_amount(message: types.Message, state: FSMContext):
    try:
        amount = float(message.text)
        if amount <= 0:
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–±–æ–ª—å—à–µ 0).")
            return

        # –°–æ–∑–¥–∞—ë–º –ø–ª–∞—Ç—ë–∂ —á–µ—Ä–µ–∑ –ÆKassa
        payment_data = create_payment(amount, user_id=message.from_user.id)
        confirmation_url = payment_data["confirmation"]["confirmation_url"]

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("–û–ø–ª–∞—Ç–∏—Ç—å üí≥", url=confirmation_url))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(
            f"–î–ª—è –æ–ø–ª–∞—Ç—ã {amount:.2f} RUB –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
            reply_markup=keyboard,
        )
        await state.clear()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É–º–º—ã.")


# –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É
def user_support_finl(support_login: str) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        ikb("üíå –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url=f"https://t.me/{support_login}"),
    )

    return keyboard.as_markup()


def user_client_finl(chat_link) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        ikb("‚òéÔ∏è –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç —Å –∑–∞–∫–∞–∑—á–∏–∫–æ–º", url=f"tg://user?id={chat_link}"),
    )

    return keyboard.as_markup()


################################################################################
################################### –ü–õ–ê–¢–ï–ñ–ò ####################################
# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
def refill_method_finl() -> Union[InlineKeyboardMarkup, None]:
    keyboard = InlineKeyboardBuilder()

    get_payments = Paymentsx.get()

    keyboard.row(ikb("üîÆ –Ækassa", data="user_refill_method:YooKassa"))

    keyboard.row(ikb("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", data="user_profile"))

    return keyboard.as_markup()


def withdraw_method_finl() -> Union[InlineKeyboardMarkup, None]:
    keyboard = InlineKeyboardBuilder()

    get_payments = Paymentsx.get()

    keyboard.row(ikb("üîÆ –Ækassa", data="user_withdraw_method:YooKassa"))

    keyboard.row(ikb("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", data="user_profile"))

    return keyboard.as_markup()


def client_withdraw_method_finl() -> Union[InlineKeyboardMarkup, None]:
    keyboard = InlineKeyboardBuilder()

    get_payments = Paymentsx.get()

    keyboard.row(ikb("üîÆ –Ækassa", data="client_withdraw_method:YooKassa"))

    keyboard.row(ikb("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", data="user_profile"))

    return keyboard.as_markup()


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞
def refill_bill_finl(
    pay_link: str, pay_receipt: Union[str, int], pay_way: str
) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.row(ikb("üåÄ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=pay_link)).row(
        ikb("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", data=f"Pay:{pay_way}:{pay_receipt}")
    )

    return keyboard.as_markup()


################################################################################
#################################### –ó–ê–ö–ê–ó–´ ####################################
# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
def products_open_finl(position_id, category_id, position_unix) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        ikb("üí∞ –í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–∫–∞–∑", data=f"buy_item_open:{position_id}:{position_unix}")
    ).row(ikb("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", data=f"buy_category_open:{category_id}"))

    return keyboard.as_markup()


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
def products_confirm_finl(
    position_id, category_id, position_unix
) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.row(
        ikb("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", data=f"buy_item_confirm:{position_id}:{position_unix}"),
        ikb("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", data=f"buy_position_open:{position_id}:{position_unix}"),
    )

    return keyboard.as_markup()


# –í–æ–∑–≤—Ä–∞—Ç –∫ –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –≤–≤–æ–¥–∞
def products_return_finl(position_id, category_id) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.row(ikb("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", data=f"buy_position_open:{position_id}:0"))

    return keyboard.as_markup()
